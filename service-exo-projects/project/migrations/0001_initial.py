# Generated by Django 2.2.6 on 2019-10-22 09:25

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import multiselectfield.db.fields
import project.models.mixins.project_actions
import project.models.mixins.project_execution_mixin
import project.models.mixins.project_permissions
import project.models.mixins.project_step_mixin
import project.models.mixins.step_feedback_mixin
import project.models.project_setting
import utils.descriptors.choices_descriptor_mixin
import utils.permissions.base_mixin
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('utils', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('place_id', models.CharField(blank=True, max_length=255, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('start', models.DateField(blank=True, null=True)),
                ('end', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('S', 'Active'), ('W', 'Waiting'), ('D', 'Draft'), ('F', 'Finished'), ('R', 'Removed')], default='D', max_length=1)),
                ('content_template', models.CharField(choices=[('automated', 'Automated'), ('fastrack', 'Fastrack'), ('blank', 'Blank')], default='automated', max_length=20)),
                ('template_name', models.CharField(blank=True, default='ExO Sprint', max_length=100, null=True, verbose_name='Template or project type')),
                ('accomplish', models.CharField(blank=True, choices=[('1', 'To reinvent the industry and transform our organization'), ('2', 'To transform our organization so that itâ€™s able to adapt to external industry disruption'), ('3', 'To launch an ExO or multiple ExOs in order to transform the industry')], max_length=1, null=True)),
                ('transform', models.CharField(blank=True, choices=[('1', 'The organisation as a whole, including all markets and industries in which it is positioned'), ('2', 'A specific business unit focused on a particular industry')], max_length=1, null=True)),
                ('playground', models.CharField(blank=True, choices=[('1', 'Any industry'), ('2', 'Adjacent industries'), ('3', 'Our current industry, with a goal of creating an ExO')], max_length=1, null=True)),
                ('customer', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('category', models.CharField(choices=[('T', 'Training'), ('C', 'Certification'), ('CC', 'Certification ExO Consultant'), ('CX', 'Certification ExO Sprint Coach'), ('D', 'Demo'), ('M', 'Transformation')], default='M', max_length=2)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='project_project_related', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
                'permissions': (('admin', 'Admin'), ('basic', 'Basic'), ('readonly', 'Readonly'), ('notification', 'Notification')),
            },
            bases=(utils.permissions.base_mixin.PermissionManagerMixin, project.models.mixins.project_permissions.ProjectPermissions, project.models.mixins.project_execution_mixin.ProjectExecutionMixin, project.models.mixins.project_step_mixin.ProjectStepMixin, project.models.mixins.project_actions.ProjectActions, utils.descriptors.choices_descriptor_mixin.ChoicesDescriptorMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ProjectRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('order', models.IntegerField(default=0)),
                ('code', models.CharField(blank=True, max_length=3, null=True)),
                ('role', models.CharField(max_length=200)),
                ('level', multiselectfield.db.fields.MultiSelectField(choices=[('admin', 'Admin'), ('basic', 'Basic'), ('readonly', 'Readonly'), ('notification', 'Notification')], default='basic', max_length=33)),
                ('groups', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('General', 'General'), ('Collaborators', 'Collaborators'), ('Teams', 'Teams'), ('Team', 'Team')], max_length=32, null=True)),
                ('default', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='project_projectrole_related', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_roles', to='project.Project')),
            ],
            options={
                'ordering': ['project', 'role'],
                'unique_together': {('project', 'code')},
            },
        ),
        migrations.CreateModel(
            name='Step',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=100)),
                ('index', models.IntegerField()),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('F', 'Future'), ('C', 'Current'), ('P', 'Past')], default='F', max_length=1, null=True)),
                ('start', models.DateField(blank=True, null=True)),
                ('end', models.DateField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='project.Project')),
            ],
            options={
                'ordering': ['project', 'index'],
            },
            bases=(project.models.mixins.step_feedback_mixin.StepFeedbackMixin, models.Model),
        ),
        migrations.CreateModel(
            name='StepStream',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('goal', models.CharField(blank=True, max_length=200, null=True)),
                ('step', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='streams', to='project.Step')),
                ('stream', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='step_streams', to='utils.Stream')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', models.CharField(choices=[('S', 'Active'), ('W', 'Waiting'), ('D', 'Draft'), ('F', 'Finished'), ('R', 'Removed')], default='D', max_length=1)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='project_projectstatus_related', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statuses', to='project.Project')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('launch', django.contrib.postgres.fields.jsonb.JSONField(default=project.models.project_setting.default_launch_dict)),
                ('team_communication', models.BooleanField(default=False)),
                ('ask_to_ecosystem', models.BooleanField(default=False)),
                ('swarm_session', models.BooleanField(default=True)),
                ('directory', models.BooleanField(default=True)),
                ('advisor_request', models.BooleanField(default=False)),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='project.Project')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='participant', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserProjectRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('active', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='project_userprojectrole_related', to=settings.AUTH_USER_MODEL)),
                ('project_role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_project_roles', to='project.ProjectRole')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_project_roles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['project_role__role'],
                'unique_together': {('user', 'project_role')},
            },
        ),
    ]
