# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-01-25 16:32
from __future__ import unicode_literals

import autoslug.fields
from django.conf import settings
import django.contrib.postgres.fields.hstore
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import tagulous.models.fields
import tagulous.models.models
import utils.models.unique_name


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('files', '0017_node_metadata'),
    ]

    operations = [
        migrations.CreateModel(
            name='_Tagulous_Resource_tags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField()),
                ('count', models.IntegerField(default=0, help_text='Internal counter of how many times this tag is in use')),
                ('protected', models.BooleanField(default=False, help_text='Will not be deleted when the count reaches 0')),
                ('path', models.TextField()),
                ('label', models.CharField(help_text='The name of the tag, without ancestors', max_length=255)),
                ('level', models.IntegerField(default=1, help_text='The level of the tag in the tree')),
                (
                    'parent', models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                        related_name='children', to='files._Tagulous_Resource_tags',
                    ),
                ),
            ],
            options={
                'abstract': False,
                'ordering': ('name',),
            },
            bases=(tagulous.models.models.BaseTagTreeModel, models.Model),
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'created', model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now, editable=False, verbose_name='created',
                    ),
                ),
                (
                    'modified', model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now, editable=False, verbose_name='modified',
                    ),
                ),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, populate_from='name')),
                ('extension', models.CharField(blank=True, max_length=10, null=True)),
                ('mimetype', models.CharField(blank=True, max_length=150, null=True)),
                ('_filename', models.CharField(blank=True, max_length=100, null=True)),
                ('link', models.CharField(blank=True, max_length=200, null=True)),
                ('metadata', django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True)),
                (
                    'created_by', models.ForeignKey(
                        blank=True, null=True,
                        on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'tags', tagulous.models.fields.TagField(
                        _set_tag_meta=True, force_lowercase=True,
                        help_text='Enter a comma-separated tag string', to='files._Tagulous_Resource_tags', tree=True,
                    ),
                ),
            ],
            options={
                'verbose_name': 'Resource',
                'verbose_name_plural': 'Resources',
                'ordering': ['name'],
            },
            bases=(utils.models.unique_name.UniqueNameMixin, models.Model),
        ),
        migrations.AlterUniqueTogether(
            name='_tagulous_resource_tags',
            unique_together={('slug', 'parent')},
        ),
    ]
