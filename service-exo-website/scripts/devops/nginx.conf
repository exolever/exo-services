#user  nobody;
worker_processes  2;

error_log  logs/error.log;
error_log  logs/error.log  notice;
error_log  logs/error.log  info;

#pid        run/nginx.pid;


events {
    worker_connections  2048;
}


http {

    default_type  application/octet-stream;
    include       /etc/nginx/mime.types;

    sendfile        off;

    keepalive_timeout  65;

    gzip             on;
    gzip_min_length  1000;
    gzip_proxied     expired no-cache no-store private auth;
    gzip_types       text/plain text/xml text/css text/javascript application/xml application/xhtml+xml application/rss+xml application/javascript application/x-javascript;

    map $http_upgrade $connection_upgrade {
      default upgrade;
      ''      close;
    }

    upstream service_app_server {
      server unix:/projects/service-exo-website/gunicorn.sock fail_timeout=0;
    }


  server {

      server_name _;

      access_log /var/log/nginx/access.log;
      error_log /var/log/nginx/error.log;



      location ~ /api/(.*) {

        proxy_pass         http://service_app_server/api/$1$is_args$args;
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection $connection_upgrade;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
        proxy_set_header   X-NginX-Proxy true;
        proxy_redirect     off;

        break;

      }

      location ~ /backup/(.*) {

        proxy_pass         http://service_app_server/backup/$1$is_args$args;
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection $connection_upgrade;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
        proxy_set_header   X-NginX-Proxy true;
        proxy_redirect     off;

        break;

      }


      # Proxy download
      location ~* ^/(.*) {

        # Extract download url from the request
        set $download_uri $1;  # 'file.tar.gz';
        set $download_host 's3.amazonaws.com';

        #Â Load the index.html on direct requests to /
        if ($download_uri ~* ^[a-zA-Z0-9\-]*/$) {
          set $download_uri "${download_uri}index.html";
        }


        # Compose download url
        set $download_url https://$download_host/$AWS_BUCKET/bundles/$SERVICE_NAME/$SOURCE_NAME/$download_uri;
        resolver 8.8.8.8 valid=300s;
        resolver_timeout 5s;

        # Set download request headers
        proxy_set_header Host $download_host;

        proxy_set_header      X-Real-IP  $remote_addr;
        proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header       Authorization '';
        proxy_hide_header      x-amz-id-2;
        proxy_hide_header      x-amz-request-id;

        # Do not touch local disks when proxying
        # content to clients
        proxy_max_temp_file_size 0;
        proxy_http_version    1.1;
        proxy_buffering       off;
        proxy_intercept_errors on;
        # Download the file and send it to client
        proxy_pass $download_url;

      }

      location /nginx_status {
        # Choose your status module

        # freely available with open source NGINX
        stub_status;

        # for open source NGINX < version 1.7.5
        # stub_status on;

        # available only with NGINX Plus
        # status;
      }


  }

}
