
worker_processes auto;
worker_rlimit_nofile 65535;

events {
  multi_accept on;
  worker_connections 65535;
}

http {

  charset utf-8;
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  server_tokens off;
  types_hash_max_size 2048;
  client_max_body_size 16M;

  # MIME
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  # logging
  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log warn;

  # limits
  limit_req_log_level warn;
  limit_req_zone $binary_remote_addr zone=login:10m rate=10r/m;

  # SSL
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:50m;
  ssl_session_tickets off;

  # Diffie-Hellman parameter for DHE ciphersuites
  ssl_dhparam /etc/nginx/dhparam.pem;

  # OWASP B (Broad Compatibility) configuration
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256;
  ssl_prefer_server_ciphers on;

  # OCSP Stapling
  ssl_stapling on;
  ssl_stapling_verify on;
  resolver 1.1.1.1 1.0.0.1 8.8.8.8 8.8.4.4 208.67.222.222 208.67.220.220 valid=60s;
  resolver_timeout 2s;

  map $http_upgrade $connection_upgrade {
     default upgrade;
     ''      close;
  }

  log_format custom '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent rt=$request_time "$http_referer" "$http_user_agent"';
  log_format custom_chunk '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent rt=$request_time "$http_referer" "$http_user_agent" - $download_uri';

  server {

      server_name _

      client_max_body_size 4G;

      #ÃŠFix for Graphiql IDE
      large_client_header_buffers  4 32k;

      access_log /var/log/nginx/openexo-access.log custom;
      error_log /var/log/nginx/openexo-error.log warn;

      # Temporary disabled, because is not working for apis
      # proxy_intercept_errors on;

      # Proxy download
      location ~* ^/internal_redirect/(.*?)/(.*) {
            # Do not allow people to mess with this location directly
            # Only internal redirects are allowed
            internal;

            # Extract download url from the request
            set $download_uri $2;  # 'protected/project_13/cat-1285634_640.png';
            set $download_host $1; # 'sandboxexolever.s3.amazonaws.com';

            # Compose download url
            set $download_url https://$download_host/$download_uri;

            # Set download request headers
            proxy_set_header Host $download_host;
            #proxy_set_header Authorization '';

            # The next two lines could be used if your storage
            # backend does not support Content-Disposition
            # headers used to specify file name browsers use
            # when save content to the disk
            proxy_redirect off;

            proxy_hide_header Content-Disposition;
            #add_header Content-Disposition 'attachment; filename="$args"';
            proxy_set_header      X-Real-IP  $remote_addr;
            proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_hide_header x-amz-id-2;
            proxy_hide_header     x-amz-reques-id;
            # Do not touch local disks when proxying
            # content to clients
            proxy_max_temp_file_size 0;
            proxy_http_version    1.1;
            proxy_buffering       off;
            proxy_intercept_errors        on;
            # Download the file and send it to client
            proxy_pass $download_url;

            # Location-specific logging
            access_log /var/log/nginx/internal_redirect.access.log custom_chunk;
            error_log /var/log/nginx/internal_redirect.error.log warn;

      }

      location /public/assessment/ {
            rewrite ^ https://exqsurvey.com permanent;
      }

      location /static {
          alias /projects/service-exo-broker/static;
      }

      location /media {
         alias /projects/service-exo-broker/media;
      }

      location /assets {
         alias /projects/service-exo-broker/static/assets;
         add_header Content-Disposition 'inline';
      }

      # TODO: maybe we can remove this
      # Rule to avoid access to service-exo's update-server-name
      location ~* ^/.+/update-server-name/$ {
          deny all;
      }

      # Load of favicon/manifest.json and i18n/en.json
      location ~ ^/assets/(.*)\.(json|svg|png|jpg|gif|ico|csv) {


        proxy_set_header Host openexo.s3.amazonaws.com;
        proxy_buffering off;
        proxy_pass_request_body off; # Not needed by AWS.
        proxy_pass_request_headers off;
        # Clean up the headers going to and from S3.
        proxy_hide_header "x-amz-id-2";
        proxy_hide_header "x-amz-request-id";
        proxy_hide_header "x-amz-storage-class";
        proxy_hide_header "Set-Cookie";
        proxy_ignore_headers "Set-Cookie";

        proxy_pass http://openexo.s3.amazonaws.com/bundles/exo-frontend/<SOURCE_NAME>/assets/$1.$2;
        # proxy_pass http://cdn.openexo.com/bundles/exo-frontend/<SOURCE_NAME>/assets/$1.$2;

        proxy_set_header  X-Real-IP         $remote_addr;
        proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Proto $scheme;

        proxy_http_version 1.1;

        proxy_pass_header Connection;
        proxy_pass_header Authorization;
        proxy_pass_header Date;


      }

      location ~ ^/mails/(.*)  {

          # this is the internal Docker DNS
          resolver 127.0.0.11;

          set $mail_app_server service-exo-mail:8000;
          proxy_pass         http://$mail_app_server/$1$is_args$args;
          proxy_http_version 1.1;
          proxy_set_header   Upgrade $http_upgrade;
          proxy_set_header   Connection $connection_upgrade;
          proxy_set_header   Host $host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $server_name;
          proxy_set_header   X-NginX-Proxy true;
          proxy_redirect     off;

          access_log /var/log/nginx/service-exo-mail-access.log custom;
          error_log /var/log/nginx/service-exo-mail-error.log warn;
      }

      location ~ ^/opportunities/(.*)  {

          # this is the internal Docker DNS
          resolver 127.0.0.11;

          set $opportunities_app_server service-exo-opportunities:8000;
          proxy_pass         http://$opportunities_app_server/$1$is_args$args;
          proxy_http_version 1.1;
          proxy_set_header   Upgrade $http_upgrade;
          proxy_set_header   Connection $connection_upgrade;
          proxy_set_header   Host $host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $server_name;
          proxy_set_header   X-NginX-Proxy true;
          proxy_redirect     off;

          access_log /var/log/nginx/service-exo-opportunities-access.log custom;
          error_log /var/log/nginx/service-exo-opportunities-error.log warn;
      }

      location ~ ^/exo-auth/(.*)  {

          # this is the internal Docker DNS
          resolver 127.0.0.11;

          set $auth_app_server service-exo-auth:8000;
          proxy_pass         http://$auth_app_server/$1$is_args$args;
          proxy_http_version 1.1;
          proxy_set_header   Upgrade $http_upgrade;
          proxy_set_header   Connection $connection_upgrade;
          proxy_set_header   Host $host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $server_name;
          proxy_set_header   X-NginX-Proxy true;
          proxy_redirect     off;

          access_log /var/log/nginx/service-exo-auth-access.log custom;
          error_log /var/log/nginx/service-exo-auth-error.log warn;
      }

      location ~ ^/payments/(.*)  {

          # this is the internal Docker DNS
          resolver 127.0.0.11;

          set $payments_app_server service-exo-payments:8000;
          proxy_pass         http://$payments_app_server/$1$is_args$args;
          proxy_http_version 1.1;
          proxy_set_header   Upgrade $http_upgrade;
          proxy_set_header   Connection $connection_upgrade;
          proxy_set_header   Host $host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $server_name;
          proxy_set_header   X-NginX-Proxy true;
          proxy_redirect     off;

          access_log /var/log/nginx/service-exo-payments-access.log custom;
          error_log /var/log/nginx/service-exo-payments-error.log warn;
      }

      location ~ ^/conversations/(.*)  {

          # this is the internal Docker DNS
          resolver 127.0.0.11;

          set $conversations_app_server service-exo-conversations:8000;
          proxy_pass         http://$conversations_app_server/$1$is_args$args;
          proxy_http_version 1.1;
          proxy_set_header   Upgrade $http_upgrade;
          proxy_set_header   Connection $connection_upgrade;
          proxy_set_header   Host $host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $server_name;
          proxy_set_header   X-NginX-Proxy true;
          proxy_redirect     off;

          access_log /var/log/nginx/service-exo-conversations-access.log custom;
          error_log /var/log/nginx/service-exo-conversations-error.log warn;
      }

    location ~ ^/projects/(.*)  {

          # this is the internal Docker DNS
          resolver 127.0.0.11;

          set $projects_app_server service-exo-projects:8000;
          proxy_pass         http://$projects_app_server/$1$is_args$args;
          proxy_http_version 1.1;
          proxy_set_header   Upgrade $http_upgrade;
          proxy_set_header   Connection $connection_upgrade;
          proxy_set_header   Host $host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $server_name;
          proxy_set_header   X-NginX-Proxy true;
          proxy_redirect     off;

          access_log /var/log/nginx/service-exo-projects-access.log custom;
          error_log /var/log/nginx/service-exo-projects-error.log warn;
      }

    location ~ ^/events/(.*)  {

          # this is the internal Docker DNS
          resolver 127.0.0.11;

          set $events_app_server service-exo-events:8000;
          proxy_pass         http://$events_app_server/$1$is_args$args;
          proxy_http_version 1.1;
          proxy_set_header   Upgrade $http_upgrade;
          proxy_set_header   Connection $connection_upgrade;
          proxy_set_header   Host $host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $server_name;
          proxy_set_header   X-NginX-Proxy true;
          proxy_redirect     off;

          access_log /var/log/nginx/service-exo-events-access.log custom;
          error_log /var/log/nginx/service-exo-events-error.log warn;
      }

    location ~ ^/exq/(.*)  {

          # this is the internal Docker DNS
          resolver 127.0.0.11;

          set $events_app_server service-exo-exq:8000;
          proxy_pass         http://$events_app_server/$1$is_args$args;
          proxy_http_version 1.1;
          proxy_set_header   Upgrade $http_upgrade;
          proxy_set_header   Connection $connection_upgrade;
          proxy_set_header   Host $host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $server_name;
          proxy_set_header   X-NginX-Proxy true;
          proxy_redirect     off;

          access_log /var/log/nginx/service-exo-exq-access.log custom;
          error_log /var/log/nginx/service-exo-exq-error.log warn;
      }

      location ~ ^/jobs/(.*)  {

          # this is the internal Docker DNS
          resolver 127.0.0.11;

          set $events_app_server service-exo-jobs:8000;
          proxy_pass         http://$events_app_server/$1$is_args$args;
          proxy_http_version 1.1;
          proxy_set_header   Upgrade $http_upgrade;
          proxy_set_header   Connection $connection_upgrade;
          proxy_set_header   Host $host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $server_name;
          proxy_set_header   X-NginX-Proxy true;
          proxy_redirect     off;

          access_log /var/log/nginx/service-exo-jobs-access.log custom;
          error_log /var/log/nginx/service-exo-jobs-error.log warn;
      }

      location ~ ^/notifications/(.*)  {

          # this is the internal Docker DNS
          resolver 127.0.0.11;

          set $notifications_app_server service-exo-broker:8000;
          proxy_pass         http://$notifications_app_server/$1$is_args$args;
          proxy_http_version 1.1;
          proxy_set_header   Upgrade $http_upgrade;
          proxy_set_header   Connection $connection_upgrade;
          proxy_set_header   Host $host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $server_name;
          proxy_set_header   X-NginX-Proxy true;
          proxy_redirect     off;

          access_log /var/log/nginx/service-exo-broker-access.log custom;
          error_log /var/log/nginx/service-exo-broker-error.log warn;
      }

      location ~ ^/healthcheck/(.*)  {

          # this is the internal Docker DNS
          resolver 127.0.0.11;

          set $healthchecker_app_server service-exo-broker:8001;
          proxy_pass         http://$healthchecker_app_server/$1$is_args$args;
          proxy_http_version 1.1;
          proxy_set_header   Upgrade $http_upgrade;
          proxy_set_header   Connection $connection_upgrade;
          proxy_set_header   Host $host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $server_name;
          proxy_set_header   X-NginX-Proxy true;
          proxy_redirect     off;

          access_log /var/log/nginx/service-exo-broker-access.log custom;
          error_log /var/log/nginx/service-exo-broker-error.log warn;
      }

      location ~ ^/website/(.*)  {

          # this is the internal Docker DNS
          resolver 127.0.0.11;

          set $website_app_server service-exo-website:80;
          proxy_pass         http://$website_app_server/$1$is_args$args;
          proxy_http_version 1.1;
          proxy_set_header   Upgrade $http_upgrade;
          proxy_set_header   Connection $connection_upgrade;
          proxy_set_header   Host $host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $server_name;
          proxy_set_header   X-NginX-Proxy true;
          proxy_redirect     off;

          access_log /var/log/nginx/service-exo-website-access.log custom;
          error_log /var/log/nginx/service-exo-website-error.log warn;
      }

      location ~ /medialibrary/(.*) {

          # this is the internal Docker DNS
          resolver 127.0.0.11;

          set $exo_library_app_server service-exo-medialibrary:8000;
          proxy_pass         http://$exo_library_app_server/$1$is_args$args;
          proxy_http_version 1.1;
          proxy_set_header   Upgrade $http_upgrade;
          proxy_set_header   Connection $connection_upgrade;
          proxy_set_header   Host $host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $server_name;
          proxy_set_header   X-NginX-Proxy true;
          proxy_redirect     off;

          access_log /var/log/nginx/service-exo-medialibrary-access.log custom;
          error_log /var/log/nginx/service-exo-medialibrary-error.log warn;
      }

      location ~ ^/companies/(.*)  {

          # this is the internal Docker DNS
          resolver 127.0.0.11;

          set $events_app_server service-exo-companies:8000;
          proxy_pass         http://$events_app_server/$1$is_args$args;
          proxy_http_version 1.1;
          proxy_set_header   Upgrade $http_upgrade;
          proxy_set_header   Connection $connection_upgrade;
          proxy_set_header   Host $host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $server_name;
          proxy_set_header   X-NginX-Proxy true;
          proxy_redirect     off;

          access_log /var/log/nginx/service-exo-companies-access.log custom;
          error_log /var/log/nginx/service-exo-companies-error.log warn;
      }

      location ~ ^/tools/postgres/(.*)  {

          # this is the internal Docker DNS
          resolver 127.0.0.11;

          set $pgweb_app_server pgweb:8081;
          proxy_pass         http://$pgweb_app_server/$1$is_args$args;
          proxy_http_version 1.1;
          proxy_set_header   Upgrade $http_upgrade;
          proxy_set_header   Connection $connection_upgrade;
          proxy_set_header   Host $host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $server_name;
          auth_request       /api/accounts/me/;
      }

      location ~ ^/tools/astrako/(.*)  {

          # this is the internal Docker DNS
          resolver 127.0.0.11;

          set $astrako astrako:8000;
          proxy_pass         http://$astrako/$1$is_args$args;
          proxy_http_version 1.1;
          proxy_set_header   Upgrade $http_upgrade;
          proxy_set_header   Connection $connection_upgrade;
          proxy_set_header   Host $host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $server_name;
          auth_request       /api/accounts/me/;
      }

      location = /robots.txt {
            add_header Content-Type text/plain;
            return 200 "User-Agent: T-1000\nUser-Agent: T-800\nDisallow: /+SalimIsmail\nDisallow: /+FranciscoPalao\n";
      }

      location ~ ^/(admin|api|home|typeform|network|customer|partner|certification|project|assessment|accounts|public\/mail|public\/webhooks|public\/performance|tool|learning|files|graphql|public-graphql|health|docs|__debug__)/(.*) {
          # Exponential Header
          add_header X-OpenExO "Transforming the world for a better exponential future!";

          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          # enable this if and only if you use HTTPS, this helps Rack
          # set the proper protocol for doing redirects:
          # proxy_set_header X-Forwarded-Proto https;
          # pass the Host: header from the client right along so redirects
          # can be set properly within the Rack application
          proxy_set_header Host $http_host;
          # we don't want nginx trying to do something clever with
          # redirects, we set the Host: header above already.
          proxy_redirect off;

          proxy_intercept_errors on;

          # this is the internal Docker DNS
          resolver 127.0.0.11;

          set $exo_core_app_server service-exo-core:8000;
          proxy_pass         http://$exo_core_app_server/$1/$2$is_args$args;

          access_log /var/log/nginx/service-exo-core-access.log custom;
          error_log /var/log/nginx/service-exo-core-error.log warn;

          proxy_buffering off;
          proxy_http_version 1.1;
      }

      location ~ ^/custom-elements/(.+)/(.*) {
        # Exponential Header
        add_header X-OpenExO "Transforming the world for a better exponential future!";
        add_header Access-Control-Allow-Origin *;

        proxy_set_header Host openexo.s3.amazonaws.com;
        proxy_buffering off;
        proxy_pass_request_body off; # Not needed by AWS.
        proxy_pass_request_headers off;
        # Clean up the headers going to and from S3.
        proxy_hide_header "x-amz-id-2";
        proxy_hide_header "x-amz-request-id";
        proxy_hide_header "x-amz-storage-class";
        proxy_hide_header "Set-Cookie";
        proxy_ignore_headers "Set-Cookie";

        proxy_pass http://openexo.s3.amazonaws.com/bundles/exo-frontend/<SOURCE_NAME>/custom-elements/$1/$2;

        proxy_set_header  X-Real-IP         $remote_addr;
        proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Proto $scheme;

        proxy_http_version 1.1;

        proxy_pass_header Connection;
        proxy_pass_header Authorization;
        proxy_pass_header Date;

      }

      location ~ ^/public-exq/(.+)/(.+)$ {
        return 301 /public-exq/?lang=$1&slug=$2;
      }

      location ~ ^/public-exq/(.+)$ {
        return 301 /public-exq/?lang=en&slug=$1;
      }

      location /public-exq/ {
        # Exponential Header
        add_header X-OpenExO "Transforming the world for a better exponential future!";

        proxy_set_header Host openexo.s3.amazonaws.com;
        proxy_buffering off;
        proxy_pass_request_body off; # Not needed by AWS.
        proxy_pass_request_headers off;
        # Clean up the headers going to and from S3.
        proxy_hide_header "x-amz-id-2";
        proxy_hide_header "x-amz-request-id";
        proxy_hide_header "x-amz-storage-class";
        proxy_hide_header "Set-Cookie";
        proxy_ignore_headers "Set-Cookie";

        proxy_pass http://openexo.s3.amazonaws.com/bundles/exo-frontend/<SOURCE_NAME>/custom-elements/exo-exq/index.html$is_args$args;

        proxy_set_header  X-Real-IP         $remote_addr;
        proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Proto $scheme;

        proxy_http_version 1.1;

        proxy_pass_header Connection;
        proxy_pass_header Authorization;
        proxy_pass_header Date;

      }

      location / {
          try_files $uri /index.html;
      }

      location = /index.html {
        # Exponential Header
        add_header X-OpenExO "Transforming the world for a better exponential future!";

        proxy_pass http://openexo.s3.amazonaws.com/bundles/exo-frontend/<SOURCE_NAME>/index.html;
        # proxy_pass http://cdn.openexo.com/bundles/exo-frontend/<SOURCE_NAME>/index.html;

        proxy_set_header  X-Real-IP         $remote_addr;
        proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Proto $scheme;
        proxy_pass_header Authorization;
        proxy_pass_header Date;

        proxy_http_version 1.1;
      }

      location ~ \.php$ {
          deny all;
          access_log off;
          log_not_found off;
      }

      # gzip
      gzip on;
      gzip_vary on;
      gzip_proxied any;
      gzip_comp_level 6;
      gzip_types text/plain text/css text/xml application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;

      error_page 404 500 /500.html;
      error_page 502 503 504 /50x.html;
  }

}

